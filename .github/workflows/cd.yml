name: CD
on:
  push:
    tags:
      - 'v*'  # Runs on version tags like v1.0, v2.1, etc.

jobs:
  cd:
    runs-on: ubuntu-latest
    
    # Add permission for release creation. Can be made narrower according to your needs
    permissions: write-all
    
    name: Export Game
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Cache SCons build artifacts
      uses: actions/cache@v4
      with:
        path: .scons_cache
        key: scons-${{ runner.os }}-${{ hashFiles('SConstruct', 'src/**', 'godot-cpp/**') }}
        restore-keys: |
          scons-${{ runner.os }}-

    - name: Cache Godot-cpp
      uses: actions/cache@v4
      with:
        path: godot-cpp/bin
        key: godotcpp-${{ runner.os }}-${{ hashFiles('godot-cpp/**') }}
        restore-keys: |
          godotcpp-${{ runner.os }}-

    - name: Cache Godot export templates
      uses: actions/cache@v4
      with:
        path: ~/.local/share/godot
        key: godot-templates-${{ runner.os }}-${{ hashFiles('game/export_presets.cfg') }}
        restore-keys: |
          godot-templates-${{ runner.os }}-

    - name: Set up dependencies
      run: |
        sudo apt update -y && sudo apt install scons ccache

    - name: Configure ccache
      run: |
        echo 'CC="ccache gcc"' >> $GITHUB_ENV
        echo 'CXX="ccache g++"' >> $GITHUB_ENV
        
    - name: Compile godot-cpp
      run: |
        (cd godot-cpp && scons target=template_release -j$(nproc))
    
    - name: Compile main project
      run: |
        scons target=template_release -j$(nproc)

    - name: Set up Godot 4
      uses: firebelley/godot-export@v6.0.0
      with:
        godot_executable_download_url: https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_linux.x86_64.zip
        godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_export_templates.tpz
        export-release: true
        relative_project_path: ./game
        cache: true
        verbose: true
        presets_to_export: 'Linux'
        archive_output: true

      # This release action has worked well for me. However, you can most likely use any release action of your choosing.
      # https://github.com/ncipollo/release-action
    - name: create release
      uses: ncipollo/release-action@v1.16.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
        tag: ${{ github.ref_name }}
        artifacts: ${{ steps.export.outputs.archive_directory }}/*